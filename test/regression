#!/bin/sh
# The next line is executed by /bin/sh, but not Tcl \
exec tclsh $0 ${1+"$@"}

# Copyright (c) 2019, Parallax Software, Inc.
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

# Usage: regression help | test1 [test2...]
# where test is all or the name of a tcl script in /test

# Directory containing tests.
set test_dir [file dirname [file normalize [info script]]]
set ord_dir [file dirname $test_dir]

source [file join $test_dir "regression_vars.tcl"]
source [file join $test_dir "regression.tcl"]

set tool_errors 0

# Flow based tests (MIA)
#puts "------------------------------------------------------"
#puts "OpenROAD"
incr tool_errors [regression_body]

set tool_scripts {"Init floorplan" "src/init_fp/test/regression" \
		    "DB STA" "src/dbSta/test/regression" \
		    "I/O placer" "src/ioPlacer/test/regression" \
		    "PDN gen" "src/pdngen/test/regression" \
		    "Triton Macro Place" "src/TritonMacroPlace/test/regression" \
		    "Resizer" "src/resizer/test/regression" \
		    "Triton CTS" "src/TritonCTS/test/regression" \
		    "OpenDP" "src/opendp/test/regression" \
		    "Fast Route" "src/FastRoute/test/regression" \
		    "Tap cell" "src/tapcell/test/regression" \
		    "tool" "src/tool/test/regression" \
		  }
# side lined
# "Replace" "src/replace/test/regression" \

foreach {tool script} $tool_scripts {
  puts "------------------------------------------------------"
  puts $tool
  if { [catch "exec [file join $ord_dir $script] >@stdout"] } {
    incr tool_errors
  }
}

puts "------------------------------------------------------"
if { $tool_errors } {
  puts "Found $tool_errors tool regression failures."
}

exit $tool_errors

# Local Variables:
# mode:tcl
# End:
